<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.5.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>net.cnki</groupId>
    <artifactId>cnkispringboot</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>cnkispringboot</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <!-- 排除 Spring-boot-starter 默认的日志配置 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- 操作KBase需要的依赖-->
        <dependency>
            <groupId>net.cnki</groupId>
            <artifactId>commons-codec-1.15.jar</artifactId>
            <version>1.15</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/lib/commons-codec-1.15.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>net.cnki</groupId>
            <artifactId>commons-io-2.4</artifactId>
            <version>2.4</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/lib/commons-io-2.4.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>net.cnki</groupId>
            <artifactId>commons-lang-2.6.jar</artifactId>
            <version>2.6</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/lib/commons-lang-2.6.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>net.cnki</groupId>
            <artifactId>jna-4.5.2</artifactId>
            <version>4.5.2</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/lib/jna-4.5.2.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>net.cnki</groupId>
            <artifactId>jna-platform-4.5.2</artifactId>
            <version>4.5.2</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/lib/jna-platform-4.5.2.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>net.cnki</groupId>
            <artifactId>kbase-java-2.0.0</artifactId>
            <version>2.0.0</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/lib/kbase-java-2.0.0.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>net.cnki</groupId>
            <artifactId>kbase-jna-2.0.0</artifactId>
            <version>2.0.0</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/lib/kbase-jna-2.0.0.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.24.0-GA</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <!--<version>1.2.62</version>-->
            <version>1.2.76</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>3.10.3</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.13</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
            <version>5.4.5</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.17.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.17.0</version>
        </dependency>
        <!--导入POI需要的依赖,解析Execl使用-->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.6</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.1</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!-- 默认打jar包的插件  jar包发布至windows服务器形式，使用以下配置
            如果没有引入过本地jar，那就可直接使用默认的打包插件即可，不必修改为war包插件。 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
            </plugin>

            <!-- war包形式发布至tomcat，使用以下配置
            如果引入了本地jar，需要使用此配置，因为这时候在项目中运行是没问题了，但打包之后war包的WEB-INF/lib目录下并没有本地引用的jar包-->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    &lt;!&ndash; 设置成false，否则检查web.xml是否存在。因为springboot没有web.xml &ndash;&gt;
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    &lt;!&ndash;打包后的项目名&ndash;&gt;
                    &lt;!&ndash;<warName>example</warName>&ndash;&gt;
                    <webResources>
                        <resource>
                            &lt;!&ndash;把本地libs里面的jar复制到lib&ndash;&gt;
                            <directory>src/main/resources/libs</directory>
                            <targetPath>WEB-INF/lib/</targetPath>
                            <includes>
                                <include>**/*.jar</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>-->
        </plugins>
    </build>

</project>
